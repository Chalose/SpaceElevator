#= 采用复化Gauss-Legendre方法求解单变量实积分
将积分区域划分为N份，每份作含5个高斯节点的G-L积分
对积分区间[-1, 1]，有高斯节点xi，积分系数Ai已知(i = 0,1,2,3,4):
x0 = 0.0     A0 = 0.5688889
x1 = sqrt((35-2*sqrt(70))/63) = 0.5384693       A1 = 0.4786287
x2 = -sqrt((35-2*sqrt(70))/63) = -0.5384693     A2 = 0.4786287
x3 = sqrt((35+2*sqrt(70))/63) = 0.9061799       A3 = 0.2369269
x4 = -sqrt((35-2*sqrt(70))/63) = -0.9061799     A4 = 0.2369269

由于每小段的插值精度比较高，因此不用分划太多小段即可得到比较高精度的解，求解速度快，但求解精度受限于以上数表精度，
当前只能达到1e-7精度(与数表精度一致)
=# 
# 
# 被积函数f，积分上限a，下限b，划分份数N(Int型)
# 输出积分值val, 数表精度
function IntGL(f::Function, a::Float64, b::Float64, N::Int64)
    # Gauss节点与积分系数表
    XGS = [0.0; 0.5384693; -0.5384693; 0.9061799; -0.9061799]
    AGS = [0.5688889; 0.4786287; 0.4786287; 0.2369269; 0.2369269]
    h = (b - a)/N
    Y = Array{Float64}(a : h : b)    # 一共N+1个划分节点
    X = zeros(5, 1)
    valN = zeros(N, 1)      # 保存各段积分值

    for k in 1:N
        for i in 1:5
            X[i] = 1/2*(Y[k+1] + Y[k]) + 1/2*(Y[k+1] - Y[k])*XGS[i]
        end

        valN[k] = (Y[k+1] - Y[k])/2 * (AGS[1]*f(X[1]) + AGS[2]*f(X[2]) + AGS[3]*f(X[3]) + AGS[4]*f(X[4]) + AGS[5]*f(X[5]))
    end
    val = sum(valN)

    return val        # 精度1e-7
end
